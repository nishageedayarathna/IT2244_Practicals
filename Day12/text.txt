// c language

(01)Print 'hello world!'

[2021ict09@fedora ~]$ vi intro.c            // make intro.c and store the code

#include<stdio.h>                           //input output functionalities
int main() {
	printf("Hello World!");
	return 0;
}


[2021ict09@fedora ~]$ gcc intro.c -o intro  //get the permission from server
[2021ict09@fedora ~]$ ./intro               //view the result
Hello World!

(02)Print age

//variables
int age;  //store integer values
age=25;
int age=25;


[2021ict09@fedora ~]$ vi age.c

#include<stdio.h>
int main(){
	int age=25;
	//print(age);
	printf("%d",age);
	return 0;
}


[2021ict09@fedora ~]$ gcc age.c -o age
[2021ict09@fedora ~]$ ./age
25

##########################
%d / %i --> integers
%f / %F --> float
%lf --> double
%e --> char
%s --> string


(03)
//assign new value for some variable

[2021ict09@fedora ~]$ vi age.c

#include<stdio.h>
int main(){
	int age=25;
	printf("%d",age);
	printf("\nc programming");
	age=31;
	printf("\n New age:%d",age);
	return 0;
}


[2021ict09@fedora ~]$ gcc age.c -o age
[2021ict09@fedora ~]$ ./age
25 
c programming
New age:31
//again and again print assigned values with previous values

(04)

[2021ict09@fedora ~]$ vi num.c

#include<stdio.h>
int main(){
	int num1=25;
	printf("First Number:%d",num1);
	int num2=num1;
	printf("\nSecond Number:%d",num2);
	return 0;
}


[2021ict09@fedora ~]$ gcc num.c -o num
[2021ict09@fedora ~]$ ./num
First Number:25
Second Number:25

(05)
//declare multiple variables in single line

[2021ict09@fedora ~]$ vi num1.c

#include<stdio.h>
int main(){
	int num1,num2=25;
	printf("First Number:%d",num1);
	printf("\nSecond Number:%d",num2);
	return 0;
}

[2021ict09@fedora ~]$ gcc num1.c -o num1
[2021ict09@fedora ~]$ ./num1
First Number:1
Second Number:25

(06)
//variable naming conventions

//can't create varibale name with space
//can't start variable names with numbers


(07)
//data types

[2021ict09@fedora ~]$ vi sizeOfAge.c

#include<stdio.h>
int main(){
	int age=10;
	printf("%d",age);
	printf("\nsize:%zu",sizeof(age));
	return 0;
}

[2021ict09@fedora ~]$ gcc sizeOfAge.c -o sizeOfAge
[2021ict09@fedora ~]$ ./sizeOfAge
10
size:4  //integer--> 4 bytes

(08)
//Data Types

[2021ict09@fedora ~]$ vi dataTypes.c

#include<stdio.h>
int main(){
	int num1=10;
	double num2=12.45;
	printf("Integer Number:%d",num1);
	printf("\nDouble Number:%.lf",num2);
	printf("\nDouble Number:%.2lf",num2);
	
	float num3=10.9f;
	printf("\nFloat Number:%f",num3);
	printf("\nFloat Number:%.1f",num3);
	
	char character='N';
	printf("\nCharacter:%c",character);
	printf("\nCharacter:%d",character);  //characters are internally stores as integers
	return 0;
}


[2021ict09@fedora ~]$ gcc dataTypes.c -o dataTypes
[2021ict09@fedora ~]$ ./dataTypes
Integer Number:10
Double Number:12
Double Number:12.45
Float Number:10.900000
Float Number:10.9
Character:N
Character:78

(09)
//user inputs
[2021ict09@fedora ~]$ vi input.c

#include<stdio.h>
int main(){
	int age;
	printf("Enter your age:");
	scanf("%d", &age);  // &-->ampasan
	printf("Age:%d",age);
	
	double num;
	printf("\nEnter your number:");
	scanf("%lf", &num);
	printf("Double Number:%lf",num);
	
	float num2;
	printf("\nEnter your float number:");
	scanf("%f", &num2); 
	printf("Double Number:%f",num2);
	
	char character;
	printf("\nEnter your character:");
	scanf(" %c", &character);
	printf("Character:%c",character);
	
	//multiple inputs together
	double num3;
	char alpha;
	printf("\nEnter inputs:");
	scanf("%lf %c", &num3,&alpha);
	
	return 0;
}


[2021ict09@fedora ~]$ gcc input.c -o input
[2021ict09@fedora ~]$ ./input
Enter your age:23
Age:23
Enter your number:12.45
Double Number:12.450000
Enter your float number:34.8963
Double Number:34.896301
Enter your character:n
Character:n
Enter inputs:24.24 n


(10)

// --> single line comments  --> ctrl+/
/*  */ --> multiple comments --> ctrl+shift+/

(11)
arithmetic operators
+
-
*
/
% -->remainder

[2021ict09@fedora ~]$ vi arithmetic.c

#include<stdio.h>
int main(){
	int num1;
	printf("Enter your number 1:");
	scanf("%d", &num1);  
	
	int num2;
	printf("Enter your number 2:");
	scanf("%d", &num2);  
	
	int sum=num1+num2;
	int sub=num1-num2;
	int mul=num1*num2;
	double div=num1/num2;
	int rem=num1%num2;
	
	printf("\nSummation:%d",sum);
	printf("\nSubtraction:%d",sub);
	printf("\nMultiplication:%d",mul);
	printf("\nDivision:%lf",div);
	printf("\nRemainder:%d",rem);
	
	return 0;
}

[2021ict09@fedora ~]$ gcc arithmetic.c -o arithmetic
[2021ict09@fedora ~]$ ./arithmetic
Enter your number 1:20
Enter your number 2:10

Summation:30
Subtraction:10
Multiplication:200
Division:2.000000
Remainder:0
